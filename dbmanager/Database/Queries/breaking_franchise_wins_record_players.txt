with
     TeamsWithRecordUntilSeason as (
         select Season,
                TeamId,
                TeamNames,
                Wins,
                Loses,
                WinPercent,
                max(Wins) over W1 as WinsRecord
         from TeamSeason
         window W1 as (partition by TeamId order by Season rows between unbounded preceding and 1 preceding)
         ),
     WithRecordData as (
         select T1.*,
                group_concat(T2.Season) as SeasonsRecorded,
                group_concat(T2.TeamNames || '(' || T2.Season || ') - ' || T2.Wins || '+, ' || T2.Loses || '-, ' || T2.WinPercent, ', ') as WithExtraData,
                T1.Season - min(T2.Season) as SinceFirstRecorded
         from TeamsWithRecordUntilSeason T1
            left join TeamSeason T2 on T1.TeamId = T2.TeamId and T2.Wins = WinsRecord and T2.Season < T1.Season
         group by T1.TeamId, T1.Season
     ),
     BreakingRecordSeasons as (
         select *
         from WithRecordData
         where Wins > WinsRecord
     ),
     PlayersBreakingRecordsSeasons as (
         select P.Season,
                P.TeamId,
                TeamNames,
                T.Wins + T.Loses as TeamGamesNumber,
                T.Wins as TeamWins,
                T.Loses as TeamLoses,
                WinsRecord,
                SeasonsRecorded,
                SinceFirstRecorded,
                PlayerId,
                PlayerName,
                WinPercent as TeamWinPercent,
                GamesNumber as PlayerGamesNumber,
                P.Wins as PlayerWins,
                P.Loses as PlayerLoses,
                TotalMIN, AverageMIN,
                TotalPTS, AveragePTS,
                WithExtraData,
                row_number() over (partition by PlayerId, P.TeamId order by T.Wins desc) as WinsOrder,
                count(*) over (partition by PlayerId, P.TeamId rows between unbounded preceding and current row) as BrokenUntil
         from PlayerSeasonAtTeam P
            inner join BreakingRecordSeasons T on P.Season = T.Season and P.TeamId = T.TeamId
     ),
     Grouped as (
         select PlayerId,
                PlayerName,
                count(distinct TeamId) as TeamsBrokeWinsRecordWith,
                group_concat(TeamNames || '(' || Season || ') - ' || PlayerGamesNumber, ', ') as TeamsToBreak,
                group_concat(WithExtraData) as SeasonsExtraData,
                sum(TotalMIN) * 1.0 / sum(PlayerGamesNumber) as AverageMIN,
                sum(TotalPTS) * 1.0 / sum(PlayerGamesNumber) as AveragePTS
         from PlayersBreakingRecordsSeasons P
         where PlayerGamesNumber >= 0.7 * TeamGamesNumber and AverageMIN >= 20 and WinsOrder = 1
         group by PlayerId
     )
select *
from Grouped
order by TeamsBrokeWinsRecordWith desc