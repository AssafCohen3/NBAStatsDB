with
    RunningTotalsFranchise as (
        select PlayerId, PlayerName, TeamId, TeamName, GameId, GameDate, PTS,
               sum(PTS) over (partition by PlayerId, TeamId order by GameDate rows between unbounded preceding and current row) as TotalPointsFollowing
        from BoxScoreP
        where SeasonType=2
    ),
    RunningTotalsWithFranchiseLeader as (
        select *,
               max(TotalPointsFollowing) over W2 as MaxPointsFranchiseEntering,
               max(TotalPointsFollowing) over W1 as MaxPointsFranchiseFollowing
        from RunningTotalsFranchise RTF1
        window W1 as (partition by TeamId order by GameDate range between unbounded preceding and current row),
         W2 as (partition by TeamId order by GameDate groups between unbounded preceding and 1 preceding)
    ),
    RunningTotalsWithFranchiseLeaderId as (
        select RTF1.*,
               min(RTF2.GameDate) as MinAchieved,
               RTF2.PlayerId as FranchiseLeaderId,
               RTF2.PlayerName as FranchiseLeaderName
        from RunningTotalsWithFranchiseLeader RTF1
            inner join RunningTotalsFranchise RTF2 on RTF2.GameDate < RTF1.GameDate and RTF2.TeamId = RTF1.TeamId and RTF2.TotalPointsFollowing = RTF1.MaxPointsFranchiseEntering
        group by RTF1.GameId, RTF1.PlayerId
    ),
    FranchiseLeadersGames as (
        select *
        from RunningTotalsWithFranchiseLeaderId
        where TotalPointsFollowing > MaxPointsFranchiseEntering and TotalPointsFollowing = MaxPointsFranchiseFollowing and PlayerId != FranchiseLeaderId
        order by GameDate desc
    ),
    WithEvents as (
        select FLG.*,
            Description,
            Period,
            RemainingSeconds,
            TeamAScore,
            TeamBScore,
            ScoreMargin,
            sum(ShotValue) over (partition by Event.GameId, PlayerAId order by EventOrder rows between unbounded preceding and current row) - Event.ShotValue as ScoreBefore,
            ShotValue
        from FranchiseLeadersGames FLG
            inner join Event on Event.GameId = FLG.GameId and PlayerAId = PlayerId and (EventType = 1 or (EventType = 3 and Description not like '%MISS%'))
    )
select *,
       TotalPointsFollowing - PTS + ScoreBefore + ShotValue as CurrentTotal
from WithEvents
where CurrentTotal > MaxPointsFranchiseEntering and TotalPointsFollowing - PTS + ScoreBefore <= MaxPointsFranchiseEntering
order by GameDate desc