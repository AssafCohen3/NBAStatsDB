with
     PlayersSecondChanceOfSelf as (
         select
                E1.PlayerAId as ShootingPlayerId,
                E2.PlayerAId as RebounderId,
                E3.PlayerAId as MissingPlayerId,
                E3.EventType as MissingType,
                max(E2.EventOrder + E3.EventOrder) as ClosestEventsSummed
         from Event E1
             inner join Event E2
                 on E1.GameId = E2.GameId and E1.RealPossesionNumber = E2.RealPossesionNumber
                        and E2.EventType = 4 and E2.EventOrder < E1.EventOrder
             inner join Event E3
                on E3.GameId = E1.GameId and E3.RealPossesionNumber = E2.RealPossesionNumber
                and (E3.EventType = 2 or (E3.EventType = 3 and E3.Description like '%MISS%' and E3.EventActionType in (10, 12, 15))) and E3.EventOrder < E2.EventOrder
         where E1.EventType = 1 and E1.SeasonType=2
         group by E1.GameId, E1.EventOrder
     )
select PlayerId, PSFS.PlayerName, PSFS.TotalFGA, PSFS.TotalFGM,
       count(*) as SecondChanceFromSelf,
       count(*) * 1.0 / TotalFGM as SecondChanceFromSelfRatio
from PlayersSecondChanceOfSelf P
    inner join PlayerCareerPBPSeasonFullStats PSFS on P.ShootingPlayerId = PSFS.PlayerId
where RebounderId = ShootingPlayerId and MissingPlayerId = ShootingPlayerId and MissingType=2
group by ShootingPlayerId
order by SecondChanceFromSelfRatio desc
